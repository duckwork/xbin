#!/bin/dash
# Focus Window
# vim:ft=sh

. $WMRC
ARGS="<wid>";

WINDOW_RAISE=${WINDOW_RAISE:-0};
WARP_POINTER=${WARP_POINTER:-0};

setborder() { # <focus|normal> <wid>
    # TODO: expand to allow for arbitrary color schemes
    set -u;
    test $# -eq 2 || return $ERRARG;
    wattr $2 || return $ERRWIN;
    test "$(wattr xywh $2)" != "$(wattr xywh $WRT)" || return $ERRWIN;
    chwb -s $BorderWidth $2;
    case $1 in
        focus)
            # chwb2 -I $FocusColor -O $OuterColor \
            #       -i $InnerBorder -o $OuterBorder $2
            chwb -s $((BorderWidth)) -c $FocusColor $2;
            ;;
        normal)
            # chwb2 -I $NormColor -O $OuterColor \
            #       -i $InnerBorder -o $OuterBorder $2
            chwb -s $((BorderWidth)) -c $NormColor $2;
            ;;
    esac
}

focid() { # <wid>
    wattr $1 2>/dev/null || {
        usage $ERRWIN "Can't find window '$wid'";
    }
    setborder normal $PFW;
    setborder focus  $1;
    xprop -id $PFW -f WM_FOCUS 8c -set WM_FOCUS 0;
    xprop -id $1   -f WM_FOCUS 8c -set WM_FOCUS 1;
    test $WARP_POINTER -eq 1 && wmp $(irtw md $1);
    test $WINDOW_RAISE -eq 1 && chwso -r $1;
    wtf $1;
}

test $# -eq 0 && { focid $PFW; exit $SUCCESS; }

# handle flags
while expr "$1" : "-.*" >/dev/null 2>&1; do
    case "$1" in
        -r) WINDOW_RAISE=1 ;;
        -p) WARP_POINTER=1 ;;
    esac
    shift;
done

case "$1" in
    0x*) focid $1 ;;
    *)
        test -z $1 && { focid $(pfw); exit $SUCCESS; }
        isExecutable $1 || exit $ERREXE;
        focid $($@);
    ;;
esac
